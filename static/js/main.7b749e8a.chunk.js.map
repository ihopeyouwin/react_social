{"version":3,"sources":["components/dialogs/dialogs.module.css","components/navbar/navbar.module.css","components/profile/profileinfo/profileinfo.module.css","components/users/users.module.css","components/dialogs/dialogitm/dialogitm.jsx","components/navbar/friends/friends.jsx","components/profile/myposts/myposts.module.css","components/header/header.module.css","components/users/assets/empty.png","assets/fetching.svg","assets/beach.jpg","components/profile/myposts/post/post.module.css","components/header/u21.png","components/dialogs/dialogitm sync /^.*$","components/dialogs/dialogitm/jew.png","components/dialogs/dialogitm/jules.png","components/dialogs/dialogitm/lida.png","components/dialogs/dialogitm/nigga.png","components/dialogs/dialogitm/slava.png","components/navbar/friends sync /^.*$","components/navbar/friends/jew.png","components/navbar/friends/jules.png","components/navbar/friends/lida.png","components/navbar/friends/nigga.png","components/navbar/friends/slava.png","serviceWorker.js","redux/profile-reducer.js","redux/messages-reducer.js","redux/sidepage-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/music/music.jsx","components/settings/settings.jsx","components/dialogs/message/message.jsx","components/dialogs/dialogs.jsx","components/dialogs/dialogsContainer.js","components/navbar/navitm/navitm.jsx","components/navbar/navbar.jsx","components/navbar/navbarContainer.js","components/users/users.jsx","components/common/preloader.jsx","api/api.js","components/users/usersContainer.js","components/profile/profileinfo/profileinfo.jsx","components/profile/myposts/post/post.jsx","components/profile/myposts/myposts.jsx","components/profile/myposts/myPostsContainer.js","components/profile/profile.jsx","components/profile/profileContainer.jsx","components/header/header.jsx","components/header/headerContainer.jsx","App.js","index.js"],"names":["module","exports","Dialogitm","props","className","s","dialog","src","require","path","alt","to","id","name","Friends","frwrap","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Boolean","window","location","hostname","match","initialState","posts","message","likes","newPostText","profile","profileReducer","state","action","type","newpost","newText","dialogs","msgdata","newMsgBody","messagesReducer","body","sidebar","dialogData","sidepageReducer","usertabs","pageSize","totalUsers","currentPage","isFetching","followProgress","usersReducer","user","userId","follow","count","filter","email","login","isAuth","authReducer","data","reducers","combineReducers","profilePage","messagesPage","sidePage","usersPage","auth","store","createStore","Music","Settings","Message","Dialogs","dialogelts","di","key","msgelts","el","dialogswrapper","diallist","messages","value","onChange","evt","target","updateMessageBody","placeholder","onClick","sendMessage","DialogsContainer","connect","dispatch","Navitm","n","item","activeClassName","active","Navbar","navitems","friends","slice","friend","nav","friendrow","NavbarContainer","Users","pagesCount","Math","ceil","pages","i","push","container","page","onPageChanged","selectedpage","undefined","users","u","usertab","photos","small","ava","disabled","some","toggleFollowProgress","axios","withCredentials","headers","then","response","resultCode","tounfollow","tofollow","status","Preloader","preloader","instance","baseURL","usersAPI","getUsers","get","startFollow","delete","UsersContainer","pageNumber","toPage","toggleIsFetching","setUsers","items","this","setUsersCount","totalCount","unfollow","React","Component","Profileinfo","descblock","large","avatar","fullname","fullName","aboutMe","line","job","lookingForAJob","lookingForAJobDescription","contacts","vk","github","instagram","twitter","bigphoto","Post","p","Myposts","postelts","post","reverse","createRef","postsblock","text","current","updatePostText","ref","button","addPost","MypostsContainer","updatePostTextActionCreator","Profile","ProfileContainer","params","setUserProfile","ContainerWithUrlData","withRouter","Header","header","logo","loginBlock","HeaderContainer","setAuthUserData","App","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b749e8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"dialogs_dialog__3ELck\",\"active\":\"dialogs_active__a2Rhq\",\"diallist\":\"dialogs_diallist__2g_A1\",\"dialogswrapper\":\"dialogs_dialogswrapper__33kui\",\"messages\":\"dialogs_messages__1wjuZ\",\"message\":\"dialogs_message__3p6pF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__ZLeFD\",\"item\":\"navbar_item__3_DbQ\",\"active\":\"navbar_active__3EfuB\",\"frwrap\":\"navbar_frwrap__Qt5Vr\",\"friendrow\":\"navbar_friendrow__SP2-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descblock\":\"profileinfo_descblock__2ygrJ\",\"avatar\":\"profileinfo_avatar__-G4wh\",\"fullname\":\"profileinfo_fullname__Wv9Il\",\"line\":\"profileinfo_line__1f9Zf\",\"status\":\"profileinfo_status__InmTU\",\"job\":\"profileinfo_job__bQBAm\",\"contacts\":\"profileinfo_contacts__HuI60\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usertab\":\"users_usertab__3KHYW\",\"selectedpage\":\"users_selectedpage__2BxqX\",\"pages\":\"users_pages__DFa8l\",\"container\":\"users_container__3HJsk\"};","import React from 'react';\r\nimport s from './../dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialogitm = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={require(`${props.path}`)} alt=\"img\" />\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogitm;","import React from 'react';\r\nimport s from './../navbar.module.css';\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <div className={s.frwrap}>\r\n            <img src={require(`${props.path}`)} alt=\"img\"/>\r\n            <div>{props.name}</div>\r\n        </div>\r\n    )\r\n};\r\nexport default Friends;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"myposts_posts__oXOz_\",\"postsblock\":\"myposts_postsblock__Xd4W9\",\"button\":\"myposts_button__-KRXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3Bz7B\",\"loginBlock\":\"header_loginBlock__3A4P_\"};","module.exports = __webpack_public_path__ + \"static/media/empty.716713e3.png\";","module.exports = __webpack_public_path__ + \"static/media/fetching.ba7bfbe7.svg\";","module.exports = __webpack_public_path__ + \"static/media/beach.e68be759.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__2AFEi\"};","module.exports = __webpack_public_path__ + \"static/media/u21.4d2a33ea.png\";","var map = {\n\t\"./dialogitm\": 27,\n\t\"./dialogitm.jsx\": 27,\n\t\"./jew.png\": 62,\n\t\"./jules.png\": 63,\n\t\"./lida.png\": 64,\n\t\"./nigga.png\": 65,\n\t\"./slava.png\": 66\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61;","module.exports = __webpack_public_path__ + \"static/media/jew.a009fd1f.png\";","module.exports = __webpack_public_path__ + \"static/media/jules.934d77d6.png\";","module.exports = __webpack_public_path__ + \"static/media/lida.9d15dc63.png\";","module.exports = __webpack_public_path__ + \"static/media/nigga.65cf915e.png\";","module.exports = __webpack_public_path__ + \"static/media/slava.0620e5aa.png\";","var map = {\n\t\"./friends\": 29,\n\t\"./friends.jsx\": 29,\n\t\"./jew.png\": 72,\n\t\"./jules.png\": 73,\n\t\"./lida.png\": 74,\n\t\"./nigga.png\": 75,\n\t\"./slava.png\": 76\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 71;","module.exports = __webpack_public_path__ + \"static/media/jew.a009fd1f.png\";","module.exports = __webpack_public_path__ + \"static/media/jules.934d77d6.png\";","module.exports = __webpack_public_path__ + \"static/media/lida.9d15dc63.png\";","module.exports = __webpack_public_path__ + \"static/media/nigga.65cf915e.png\";","module.exports = __webpack_public_path__ + \"static/media/slava.0620e5aa.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_POST_TEXT = 'UPDATE-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'hi, whatsup?', likes: 14},\r\n        {id: 2, message: 'yo how\\'s it going', likes: 134},\r\n        {id: 3, message: 'hots 3200 ml', likes: 245},\r\n        {id: 4, message: 'top 10 falstad eu? huh', likes: 11},\r\n        {id: 5, message: 'still cant beat sc2 insane?', likes: 29},\r\n        {id: 6, message: 'thats reducer initial state', likes: 900}\r\n    ],\r\n    newPostText: '',\r\n    profile: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newpost = {\r\n                id: 7,\r\n                message: state.newPostText,\r\n                likes: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newpost],\r\n                newPostText: ''\r\n            };\r\n\r\n        case UPDATE_POST_TEXT:\r\n            return {...state, newPostText: action.newText};\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addpostActionCreator = () => ({type: ADD_POST});\r\nexport const updatePostTextActionCreator = (text) => ({type: UPDATE_POST_TEXT, newText: text});\r\nexport const setUserProfile = (profile) => ({type:SET_USER_PROFILE, profile});\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MSG_BODY = 'UPDATE_NEW_MSG_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 2, name: 'slava', path: './slava.png'},\r\n        {id: 3, name: 'vorchun', path: './jules.png'},\r\n        {id: 4, name: 'Lidon', path: './lida.png'},\r\n        {id: 5, name: 'dzham', path: './jew.png'},\r\n        {id: 6, name: 'belyaev', path: './nigga.png'}\r\n    ],\r\n    msgdata: [\r\n        {id: 1, message: 'yo dude'},\r\n        {id: 2, message: 'yo cmon'},\r\n        {id: 3, message: 'yo hows it going'},\r\n        {id: 4, message: 'yeaks'},\r\n        {id: 5, message: 'your enemy is farming, while you sleep'},\r\n        {id: 6, message: 'go hots'},\r\n    ],\r\n    newMsgBody: ''\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MSG_BODY:\r\n            return {\r\n                ...state,\r\n                newMsgBody: action.body\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = state.newMsgBody;\r\n            return {\r\n                ...state,\r\n                newMsgBody: '',\r\n                msgdata: [...state.msgdata, {id: 7, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateMessageBodyCreator = (newbody) => ({type: UPDATE_NEW_MSG_BODY, body: newbody});\r\n\r\nexport default messagesReducer;","let initialState ={\r\n    sidebar: [\r\n        {id: 1, name: 'Profile', path: '/profile'},\r\n        {id: 2, name: 'Dialogs', path: '/dialogs'},\r\n        {id: 3, name: 'Users', path: '/users'},\r\n        {id: 4, name: 'Music', path: '/music'},\r\n        {id: 5, name: 'Settings', path: '/settings'}\r\n    ],\r\n    dialogData: [\r\n        {id: 2, name: 'slava', path: './slava.png'},\r\n        {id: 3, name: 'vorchun', path: './jules.png'},\r\n        {id: 4, name: 'Lidonn', path: './lida.png'},\r\n        {id: 5, name: 'dzham', path: './jew.png'},\r\n        {id: 6, name: 'belyaev', path: './nigga.png'}\r\n    ]\r\n};\r\n\r\nconst sidepageReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidepageReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_COUNT = 'SET_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    usertabs: [],\r\n    pageSize: 15,\r\n    totalUsers: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                usertabs: state.usertabs.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user, follow: true\r\n                        };\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                usertabs: state.usertabs.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user, follow: false\r\n                        };\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {...state, usertabs: action.usertabs};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_USERS_COUNT:\r\n            return {...state, totalUsers: action.count};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followProgress: action.isFetching\r\n                    ? [...state.followProgress, action.userId]\r\n                    : state.followProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (usertabs) => ({type: SET_USERS, usertabs});\r\nexport const toPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersCount = (count) => ({type: SET_USERS_COUNT, count});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowProgress = (isFetching, userId) => ({type: TOGGLE_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport default usersReducer;","const SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({type: SET_USER_DATA, data: {userId, email, login}});\r\n\r\n\r\nexport default authReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport sidepageReducer from \"./sidepage-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidePage: sidepageReducer,\r\n    usersPage: usersReducer,\r\n    auth : authReducer\r\n});\r\n\r\n\r\nlet store = createStore(reducers);\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\n//import s from './music.module.css';\r\n\r\nconst Music = (props) =>{\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n//import s from './settings.module.css';\r\n\r\nconst Settings = (props) =>{\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './../dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './dialogs.module.css';\r\nimport Message from \"./message/message\";\r\nimport Dialogitm from \"./dialogitm/dialogitm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage;\r\n\r\n    let dialogelts = state.dialogs.map(di => <Dialogitm path={di.path} name={di.name} key={di.id}/>);\r\n    let msgelts = state.msgdata.map(el => <Message message={el.message} key={el.id}/>);\r\n    let newMsgBody = state.newMsgBody;\r\n    let onSendMsg = () => {\r\n        props.sendMessage();\r\n    };\r\n    let onMsgInput = (evt) => {\r\n        let body = evt.target.value;\r\n        props.updateMessageBody(body);\r\n    };\r\n    return (\r\n        <div className={s.dialogswrapper}>\r\n            <div className={s.diallist}>\r\n                {dialogelts}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{msgelts}</div>\r\n                <div>\r\n                    <textarea value={newMsgBody} onChange={onMsgInput} placeholder=\"write your message now\"/>\r\n                    <div><button onClick={onSendMsg}>Send</button></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","\r\nimport {sendMessageCreator, updateMessageBodyCreator} from \"../../redux/messages-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        updateMessageBody: (body) => {\r\n            dispatch(updateMessageBodyCreator(body));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        }\r\n    }\r\n};\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\nexport default DialogsContainer;","import React from 'react';\r\nimport n from './../navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navitm = (props) => {\r\n    return (\r\n        <div className={n.item}>\r\n            <NavLink to={props.path} activeClassName={n.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\nexport default Navitm;","import React from 'react';\r\nimport s from './navbar.module.css';\r\nimport Navitm from \"./navitm/navitm\";\r\nimport Friends from \"./friends/friends\";\r\n\r\nconst Navbar = (props) => {\r\n    let state = props.sidePage;\r\n    let navitems = state.sidebar.map(el => <Navitm path={el.path} name={el.name} key={el.id}/>);\r\n    let friends = state.dialogData.slice(0, 3).map(friend =>\r\n        <Friends path={friend.path} name={friend.name} key={friend.id}/>);\r\n    return (\r\n        <div>\r\n            <nav className={s.nav}>\r\n                {navitems}\r\n                <h2>Friends</h2>\r\n                <div className={s.friendrow}>\r\n                    {friends}\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n};\r\nexport default Navbar;","\r\nimport Navbar from \"./navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        sidePage: state.sidePage\r\n    }\r\n};\r\n\r\nconst NavbarContainer = connect(mapStateToProps)(Navbar);\r\nexport default NavbarContainer;","import React from 'react';\r\nimport s from './users.module.css';\r\nimport ava from './assets/empty.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsers / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i < pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.pages}>\r\n                {pages.map(page => {\r\n                    return <span onClick={(e) => {\r\n                        props.onPageChanged(page)\r\n                    }}\r\n                                 className={props.currentPage === page ? s.selectedpage : undefined}\r\n                                 key={page}>{page}</span>\r\n                })}\r\n            </div>\r\n            {props.users.map(u => <div className={s.usertab} key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={`/profile/${u.id}`}>\r\n                                <img src={u.photos.small != null ? u.photos.small : ava} alt=\"img\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.follow\r\n                                ? <button disabled={props.followProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.toggleFollowProgress(true, u.id);\r\n                                    axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,\r\n                                        {\r\n                                            withCredentials: true,\r\n                                            headers: {\r\n                                                \"API-KEY\": \"e7e2f0ca-1756-49ac-a075-b19375687c40\"\r\n                                            }\r\n                                        })\r\n                                        .then(response => {\r\n                                            if (response.data.resultCode === 0) {\r\n                                                props.tounfollow(u.id);\r\n                                            }\r\n                                            props.toggleFollowProgress(false, u.id);\r\n                                        });\r\n                                }}>Unfollow</button>\r\n                                : <button disabled={props.followProgress.some(id => id === u.id)}  onClick={() => {\r\n                                    props.toggleFollowProgress(true, u.id);\r\n                                    axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {},\r\n                                        {\r\n                                            withCredentials: true,\r\n                                            headers: {\r\n                                                \"API-KEY\": \"e7e2f0ca-1756-49ac-a075-b19375687c40\"\r\n                                            }\r\n                                        })\r\n                                        .then(response => {\r\n                                            if (response.data.resultCode === 0) {\r\n                                                props.tofollow(u.id);\r\n                                            }\r\n                                            props.toggleFollowProgress(false, u.id);\r\n                                        });\r\n                                }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"u.location.country\"}</div>\r\n                            <div>{\"u.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n            </div>)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import preloader from \"../../assets/fetching.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader =(props) => {\r\n    return <div>\r\n        <img src={preloader} alt='loading'/>\r\n    </div>\r\n};\r\nexport default Preloader;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": \"e7e2f0ca-1756-49ac-a075-b19375687c40\"}\r\n});\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n    startFollow(id){\r\n        return instance.delete(`follow/${id}`)\r\n    }\r\n\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    toggleIsFetching,\r\n    setUsers,\r\n    toPage,\r\n    unfollow,\r\n    setUsersCount,\r\n    toggleFollowProgress\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/preloader\";\r\nimport {usersAPI} from \"../../api/api\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(data.items);\r\n            this.props.setUsersCount(data.totalCount);\r\n        });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.toPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(data.items);\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return <> {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsers={this.props.totalUsers}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   tounfollow={this.props.unfollow}\r\n                   tofollow={this.props.follow}\r\n                   toggleFollowProgress={this.props.toggleFollowProgress}\r\n                   followProgress={this.props.followProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.usertabs,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsers: state.usersPage.totalUsers,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followProgress: state.usersPage.followProgress,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    toPage,\r\n    setUsersCount,\r\n    toggleIsFetching,\r\n    toggleFollowProgress\r\n})(UsersContainer);","import React from 'react';\r\nimport s from './profileinfo.module.css';\r\nimport bigphoto from './../../../assets/beach.jpg';\r\nimport Preloader from \"../../common/preloader\";\r\n\r\nconst Profileinfo = (props) => {\r\n    if (!props.profile) {\r\n        return <div>\r\n            <img src={bigphoto} alt='bigphoto'/>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descblock}>\r\n                <img src={props.profile.photos.large} className={s.avatar} alt=\"userPhoto\"/>\r\n                <div className={s.fullname}>{props.profile.fullName}</div>\r\n                <div className={s.status}>\r\n                    <span>Статус: </span>{props.profile.aboutMe}\r\n                    <div className={s.line}></div>\r\n                </div>\r\n                <div className={s.job}>\r\n                    <div><span>ищу ли работу: </span>{props.profile.lookingForAJob ? 'ищу' : 'не ищу'}</div>\r\n                    <div><span>Комментарий: </span>{props.profile.lookingForAJobDescription}</div>\r\n                </div>\r\n                <div className={s.contacts}>\r\n                    <div>Контакты: </div>\r\n                    <div><span>vk:  </span>{props.profile.contacts.vk}</div>\r\n                    <div><span>github:  </span>{props.profile.contacts.github}</div>\r\n                    <div><span>insta:  </span>{props.profile.contacts.instagram}</div>\r\n                    <div><span>twitter:  </span>{props.profile.contacts.twitter}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Profileinfo;","import React from 'react';\r\nimport p from './post.module.css';\r\n\r\nconst Post = (props) =>{\r\n\r\n    return(\r\n    <div className={p.item}>\r\n        <img src=\"https://s3.amazonaws.com/artistsnclients/k63/samples/pju_800.JPG\" alt=\"img\" />\r\n        {props.message}\r\n        <div>\r\n            <span>like</span>\r\n            <span>({props.likes})</span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Post","import React from 'react';\r\nimport s from './myposts.module.css';\r\nimport Post from './post/post.jsx';\r\n\r\nconst Myposts = (props) => {\r\n    let postelts = props.posts.map(post => <Post message={post.message} likes={post.likes} key={post.id}/>).reverse();\r\n    let newpost = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    };\r\n    let onPostchange = () => {\r\n        let text = newpost.current.value;\r\n        props.updatePostText(text);\r\n    };\r\n    return (\r\n        <div className={s.postsblock}>\r\n            <h3>myposts</h3>\r\n            <div>\r\n                <textarea onChange={onPostchange}\r\n                          ref={newpost}\r\n                          placeholder=\"write your message here\"\r\n                          value={props.newPostText}/>\r\n            </div>\r\n            <div className={s.button}>\r\n                <button onClick={onAddPost}>Add post</button>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postelts}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Myposts","\r\nimport {addpostActionCreator, updatePostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport Myposts from \"./myposts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        updatePostText: (text) => {\r\n            let action = updatePostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addpostActionCreator());\r\n        }\r\n    }\r\n};\r\nconst MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(Myposts);\r\nexport default MypostsContainer;","import React from 'react';\r\nimport Profileinfo from \"./profileinfo/profileinfo\";\r\nimport MypostsContainer from \"./myposts/myPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <Profileinfo profile={props.profile}/>\r\n            <MypostsContainer />\r\n        </div>\r\n    )\r\n};\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = 1618;\r\n        }\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`, {withCredentials: true})\r\n            .then(response => {\r\n                this.props.setUserProfile(response.data)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile\r\n});\r\n\r\nlet ContainerWithUrlData = withRouter(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, {setUserProfile})(ContainerWithUrlData);","import React from 'react';\r\nimport logo from './u21.png';\r\nimport s from './header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) =>{\r\n    return(\r\n        <header className={s.header}>\r\n            <img src={logo} alt='img logo wide'/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? props.login : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\nexport default Header","import React from 'react';\r\nimport Header from \"./header\";\r\nimport * as axios from \"axios\";\r\nimport {setAuthUserData} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {withCredentials: true})\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, login, email} = response.data.data;\r\n                    this.props.setAuthUserData(id, email, login);\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData})(HeaderContainer);","import React from 'react';\nimport './App.css';\nimport Music from './components/music/music';\nimport Settings from './components/settings/settings';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/dialogs/dialogsContainer\";\nimport NavbarContainer from \"./components/navbar/navbarContainer\";\nimport UsersContainer from \"./components/users/usersContainer\";\nimport ProfileContainer from \"./components/profile/profileContainer\";\nimport HeaderContainer from \"./components/header/headerContainer\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <HeaderContainer />\n                <NavbarContainer />\n                <div className=\"App-content\">\n                    <Route path='/dialogs' render={() => <DialogsContainer />}/>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer />}/>\n                    <Route path='/users' render={() => <UsersContainer />}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}